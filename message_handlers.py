# message_handlers.py
from bot_instance import bot, admin_action_prompts
# –ò–ó–ú–ï–ù–ï–ù–ò–ï: –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ client_handlers –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è
import client_handlers
import admin_handlers
import data_manager
import utils
from config import ADMIN_GROUP_ID, TEXTS
import keyboards
from datetime import datetime


def handle_text_messages(message, bot_obj):
    chat_id = message.chat.id
    user_id = message.from_user.id  # –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è is_sender_admin
    text = message.text.strip()

    user_session = data_manager.get_user_session_data(chat_id)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º data_manager
    # current_state —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω—ã–º, —Ç–∞–∫ –∫–∞–∫ get_user_session_data –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç {} –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é,
    # –∞ .get('state') –Ω–∞ –ø—É—Å—Ç–æ–º —Å–ª–æ–≤–∞—Ä–µ –≤–µ—Ä–Ω–µ—Ç None.
    # –ü–æ—ç—Ç–æ–º—É –ø—Ä–æ–≤–µ—Ä–∫–∞ if current_state and ... - –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥.
    current_state = user_session.get('state')
    print(f"[DEBUG] –¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {chat_id}. –°–æ—Å—Ç–æ—è–Ω–∏–µ: {current_state}. –¢–µ–∫—Å—Ç: {text}")

    is_sender_admin = False  # –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –ª–æ–≥–∏–∫–∏ –∞–¥–º–∏–Ω–∞
    if ADMIN_GROUP_ID:
        try:
            member = bot_obj.get_chat_member(ADMIN_GROUP_ID, user_id)
            if member.status in ['creator', 'administrator']:
                is_sender_admin = True
        except Exception as e:
            print(
                f"Error checking admin status for user {user_id} in group {ADMIN_GROUP_ID} (from message_handlers): {e}")

    # –°–Ω–∞—á–∞–ª–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–≤–æ–¥ –æ—Ç –∞–¥–º–∏–Ω–∞, –µ—Å–ª–∏ –æ–Ω –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è
    if is_sender_admin:
        admin_prompt = admin_action_prompts.get(user_id)
        if admin_prompt:
            action = admin_prompt.get('action')
            if action == 'awaiting_adjustment_amount':
                admin_handlers.process_admin_adjustment_amount(message, bot_obj); return
            elif action == 'awaiting_adjustment_comment':
                admin_handlers.process_admin_adjustment_comment(message, bot_obj); return
            elif action == 'awaiting_admin_comment_to_client':
                admin_handlers.process_admin_comment_to_client(message, bot_obj); return
            elif action == 'awaiting_manual_cafe_status_message':
                admin_handlers.process_admin_manual_cafe_status_message(message, bot_obj); return
            elif action == 'awaiting_broadcast_message':
                admin_handlers.process_broadcast_message_text(message, bot_obj); return
            # –ï—Å–ª–∏ —É –∞–¥–º–∏–Ω–∞ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–æ–º–ø—Ç, –Ω–æ –æ–Ω –Ω–µ –∏–∑ —ç—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞, –ø–æ–∫–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
            # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ª–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É

    # –ó–∞—Ç–µ–º –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–≤–æ–¥ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞
    if current_state == 'awaiting_address':  # <--- –í–û–ó–í–†–ê–©–ê–ï–ú –û–ë–†–ê–ë–û–¢–ö–£ –ê–î–†–ï–°–ê
        client_handlers.process_address_input(message, bot_obj)
    elif current_state == 'awaiting_phone':  # <--- –í–û–ó–í–†–ê–©–ê–ï–ú –û–ë–†–ê–ë–û–¢–ö–£ –¢–ï–õ–ï–§–û–ù–ê
        client_handlers.process_phone_input(message, bot_obj)
    elif current_state == 'awaiting_client_comment':  # <--- –í–û–ó–í–†–ê–©–ê–ï–ú –û–ë–†–ê–ë–û–¢–ö–£ –ö–û–ú–ú–ï–ù–¢–ê–†–ò–Ø –ö –ó–ê–ö–ê–ó–£
        client_handlers.process_client_comment(message, bot_obj)
    elif current_state == 'awaiting_feedback_name':  # –í–∞—à–∞ —Ä–∞–±–æ—á–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
        data_manager.update_user_session_data(chat_id, 'feedback_info', {'name': text})  # –ò—Å–ø–æ–ª—å–∑—É–µ–º data_manager
        data_manager.update_user_session_data(chat_id, 'state', 'awaiting_feedback_phone')
        bot_obj.send_message(chat_id, "–°–ø–∞—Å–∏–±–æ! –ê —Ç–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    elif current_state == 'awaiting_feedback_phone':  # –í–∞—à–∞ —Ä–∞–±–æ—á–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
        feedback_info = user_session.get('feedback_info', {})
        feedback_info['phone'] = text
        data_manager.update_user_session_data(chat_id, 'feedback_info', feedback_info)
        # –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥ - –∑–∞–ø—Ä–æ—Å —Å–∞–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
        data_manager.update_user_session_data(chat_id, 'state', 'awaiting_feedback_message')  # –ù–û–í–û–ï –°–û–°–¢–û–Ø–ù–ò–ï
        prompt_text = TEXTS.get("feedback_prompt_message", "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ/–æ—Ç–∑—ã–≤/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:")
        bot_obj.send_message(chat_id, prompt_text)
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –≤–≤–µ–ª —Ç–µ–ª–µ—Ñ–æ–Ω –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏: '{text}'. –û–∂–∏–¥–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ.")
    elif current_state == 'awaiting_feedback_message':  # –ù–û–í–´–ô –ë–õ–û–ö –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
        feedback_info = user_session.get('feedback_info', {})
        feedback_info['message'] = text

        telegram_user_name = message.from_user.first_name
        if message.from_user.last_name: telegram_user_name += f" {message.from_user.last_name}"
        if message.from_user.username: telegram_user_name += f" (@{message.from_user.username})"
        telegram_user_id = message.from_user.id

        admin_notification_template = TEXTS.get("feedback_admin_notification_format",
                                                ("Feedback Received:\n"
                                                 "Telegram User: {telegram_user_name} (ID: `{telegram_user_id}`)\n"
                                                 "Provided Name: {feedback_name}\n"
                                                 "Provided Phone: {feedback_phone}\n\n"
                                                 "Message:\n{feedback_message}"))
        admin_message_text = admin_notification_template.format(
            telegram_user_name=utils.escape_markdown(telegram_user_name),
            telegram_user_id=telegram_user_id,
            feedback_name=utils.escape_markdown(feedback_info.get('name', '-')),
            feedback_phone=utils.escape_markdown(feedback_info.get('phone', '-')),
            feedback_message=utils.escape_markdown(text)
        )
        if ADMIN_GROUP_ID:
            try:
                bot_obj.send_message(ADMIN_GROUP_ID, admin_message_text, parse_mode='Markdown')
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –≤ –≥—Ä—É–ø–ø—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: {e}")
        else:
            print("ADMIN_GROUP_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")

        thanks_text = TEXTS.get("feedback_thanks", "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å! –ú—ã –µ–µ –∏–∑—É—á–∏–º.")
        bot_obj.send_message(chat_id, thanks_text)
        data_manager.update_user_session_data(chat_id, 'state', None)  # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
        data_manager.update_user_session_data(chat_id, 'feedback_info', {})
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–≤–µ—Ä—à–∏–ª –ø—Ä–æ—Ü–µ—Å—Å –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏.")
    elif current_state and current_state.startswith('awaiting_review_text_'):  # –í–∞—à–∞ —Ä–∞–±–æ—á–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –æ—Ç–∑—ã–≤–∞
        order_id = current_state[len('awaiting_review_text_'):]
        data_manager.update_user_session_data(chat_id, 'state', None)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º data_manager
        data_manager.update_user_session_data(chat_id, 'current_order_id', None)
        thank_you_text = "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! üåü –ú—ã –µ–≥–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É—á—Ç–µ–º."
        bot_obj.send_message(chat_id, thank_you_text)
        # –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞ –≤ data_manager.orders –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–æ–≤
        now_utc_iso = datetime.utcnow().isoformat() + "Z"
        data_manager.update_order(order_id, {'review_text': text, 'review_timestamp_utc': now_utc_iso})
        if hasattr(admin_handlers, '_update_admin_order_message'):
            admin_handlers._update_admin_order_message(bot_obj, order_id,
                                                       f"Client left a review for order #{order_id}.")
        print(f"[INFO] –ü–æ–ª—É—á–µ–Ω –æ—Ç–∑—ã–≤ –æ—Ç {chat_id} –ø–æ –∑–∞–∫–∞–∑—É {order_id}: {text}")
    else:
        # –ï—Å–ª–∏ —ç—Ç–æ –ª–∏—á–Ω—ã–π —á–∞—Ç, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–¥–º–∏–Ω –≤ –∞–∫—Ç–∏–≤–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—É—Å—Ç–æ–µ
        if message.chat.type == "private" and \
                not (is_sender_admin and admin_action_prompts.get(user_id)) and \
                (current_state == "" or current_state is None):
            print(
                f"–ü–æ–ª—É—á–µ–Ω–æ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_id} –≤ –õ–° (—Å–æ—Å—Ç–æ—è–Ω–∏–µ: '{current_state}'): '{text}'. –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∏ —É–¥–∞–ª—è–µ–º.")
            try:
                bot_obj.delete_message(chat_id, message.message_id)
            except Exception as e_del:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}:{message.message_id} - {e_del}")


def handle_photo_messages(message, bot_obj):  # –ë–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –≤–∞—à–µ–π –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ä–∞–±–æ—á–µ–π –≤–µ—Ä—Å–∏–∏
    chat_id = message.chat.id
    user_session = data_manager.get_user_session_data(chat_id)
    current_state = user_session.get('state', "")
    order_id = user_session.get('current_order_id')
    if current_state == 'awaiting_payment_photo' and order_id:
        order_data = data_manager.get_order(order_id)
        if not order_data: bot_obj.send_message(chat_id,
                                                "–û—à–∏–±–∫–∞: –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –≤–∞—à –∑–∞–∫–∞–∑ –¥–ª—è –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ —á–µ–∫–∞."); return
        photo_file_id = message.photo[-1].file_id
        if hasattr(admin_handlers, 'handle_payment_receipt_photo'):
            admin_handlers.handle_payment_receipt_photo(
                bot_obj=bot_obj, order_id=order_id, client_chat_id=chat_id,
                photo_file_id=photo_file_id, client_message_id_to_update=user_session.get('main_message_id')
            )
        else:
            print("–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: admin_handlers.handle_payment_receipt_photo –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            bot_obj.send_message(chat_id, "–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ: —Ñ—É–Ω–∫—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
    else:
        if message.chat.type == "private":
            bot_obj.send_message(chat_id,
                                 "–Ø –ø–æ–ª—É—á–∏–ª –≤–∞—à–µ —Ñ–æ—Ç–æ, –Ω–æ –Ω–µ –∑–Ω–∞—é, —á—Ç–æ —Å –Ω–∏–º –¥–µ–ª–∞—Ç—å —Å–µ–π—á–∞—Å. –ï—Å–ª–∏ —ç—Ç–æ —á–µ–∫, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –µ–≥–æ –æ—Ç–ø—Ä–∞–≤–∫—É.")
            try:
                bot_obj.delete_message(chat_id, message.message_id)
            except Exception as e_del_photo:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ —Ñ–æ—Ç–æ –æ—Ç {message.from_user.id}: {e_del_photo}")


print("–ú–æ–¥—É–ª—å message_handlers.py –∑–∞–≥—Ä—É–∂–µ–Ω.")